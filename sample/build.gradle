apply plugin: 'com.android.application'

android {
  compileSdkVersion COMPILE_SDK_VERSION as int
  buildToolsVersion BUILD_TOOLS_VERSION

  defaultConfig {
    applicationId "com.github.kimkevin.slidingicontablayout.sample"
    minSdkVersion MIN_SDK_VERSION as int
    targetSdkVersion TARGET_SDK_VERSION as int

    versionCode VERSION_CODE as int
    versionName VERSION_NAME

    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
  }

  signingConfigs {
    release {
      def privatePropertiesFile = file("private-release.properties")
      if (privatePropertiesFile.exists()) {
        Properties propsPrivate = new Properties()
        propsPrivate.load(new FileInputStream(privatePropertiesFile))

        storeFile file(propsPrivate['key.store'])
        keyAlias propsPrivate['key.alias']
        storePassword propsPrivate['key.store.password']
        keyPassword propsPrivate['key.alias.password']
      }
    }
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release

      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

dependencies {
  compile fileTree(include: ['*.jar'], dir: 'libs')
  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"

  testCompile "junit:junit:${JUNIT_VERSION}"

  debugCompile project(path: ':library')

  releaseCompile "com.github.kimkevin:slidingicontablayout:${RELEASE_VERSION_NAME}"
}
